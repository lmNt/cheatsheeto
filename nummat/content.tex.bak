\begin{center}
     \Large{\textbf{Numerik Cheat Sheeto}} \\
\end{center}

\section{Basics}
\subsection{Sortieren}
\subsection{FFT}

\section{Lineare Gleichungssysteme}
\subsection{Allgemeine Aufgabenstellung}
Geg.: $\v{A} \in \Rr{n}{n}$, $\v{b} \in \R{n}$ \\
Ges.: $\v{x} \in \R{n}$ \\
\centering $\v{Ax}=\v{b}$ \flushleft
\subsection{Dreiecksmatrizen}
Untere Dreiecksmatrix $\v{L} \in \Rr{n}{n}$ und obere Dreiecksmatrix $\v{R} \in \Rr{n}{n}$.\vspace{0.2cm}

\textsc{Regul\a re/invertierbare/nicht-singul\a re Matrix}\\
Matrix $\v{A}$ ist regul\a r, wenn $\det \v{A}\neq 0$. Determinante einer $\Delta$Matrix ist das Produkt ihrer Diagonalelemente. $\v{L}$ und $\v{R}$ sind regul\a r, wenn alle Diagonalelemente $\neq 0$.\vspace{0.2cm}

\textsc{Vorw\a rtseinsetzen}\\
\centering $\v{Ly}=\v{b}$ \flushleft
Rechenaufwand: $n^2$ AO \\
Um Speicher zu sparen  $b_i \leftarrow y_i$.\vspace{0.2cm}

\verb!forward_subst!\\
{\addtolength{\leftskip}{0mm}
\hrulefill\\
for $j=1:n$\\
\quad $x_j \leftarrow b_j/l_{jj}$\\
\quad for $i=j+1:n$\\
\qquad $b_i \leftarrow b_i-l_{ij}x_j$\\
\hrulefill\\
}\vspace{0.2cm}

\textsc{R\u ckw\a rtseinsetzen}\\
\centering $\v{Rx}=\v{y}$ \flushleft 
Rechenaufwand: $n^2$ AO \\
Um Speicher zu sparen  $b_i \leftarrow x_i$.\vspace{0.2cm}

\verb!backward_subst!\\
{\addtolength{\leftskip}{0mm}
\hrulefill\\
for $j=n:1$\\
\quad $x_j \leftarrow b_j/r_{jj}$\\
\quad for $i=1:j-1$\\
\qquad $b_i \leftarrow b_i-r_{ij}x_j$\\
\hrulefill\\
}\vspace{0.2cm}

\subsection{LR-Zerlegung}
Sei $\v{A} \in \Rr{n}{n}$ und $\v{L},\v{R} \in \Rr{n}{n}$\\
\centering $\v{A}=\v{LR}$ \flushleft

Ansatz: \\
Matrizen $\v{A}$, $\v{L}$, $\v{R}$ in Teilmatrizen $\v{A}_{**}$, $\v{A}_{*1}$, $\v{A}_{1*}$, $\v{L}_{**}$, $\v{L}_{*1}$, $\v{R}_{**}$, $\v{R}_{1*}$ zerlegen.\\ Es folgen 4 Gleichungen aus $\v{A}=\v{LR}$:
\begin{align*}
a_{11}     &= l_{11}r_{11} & & \\
\v{A}_{*1} &= \v{L}_{*1}r_{11} &\Leftrightarrow \v{L}_{*1} &= \v{A}_{*1}/r_{11} \\ 
\v{A}_{1*} &= l_{11}\v{R}_{1*} &\Leftrightarrow \v{R}_{1*} &= \v{A}_{1*}\\
\v{A}_{**} &= \v{L}_{*1}\v{R}_{1*}+\v{L}_{**}\v{R}_{**} & &
\end{align*}
Per Def. $l_{11}=1$ und damit $r_{11}=a_{11}$, sodass
\begin{equation}
\v{A}_{**} - \v{L}_{*1}\v{R}_{1*} = \v{L}_{**}\v{R}_{**}
\end{equation}

\textsc{Praktische Umsetzung}\\
Elemente von $\v{A}$ \u berschreiben, sodass:
\begin{equation}
\begin{pmatrix}
r_{11} & r_{12} & \cdots    & r_{1n} \\
l_{21} & r_{22} & \ddots    & \vdots \\
\vdots & \ddots & \ddots    & r_{n-1,n} \\
l_{n1} & \cdots & l_{n,n-1} & r_{nn} 
\end{pmatrix}
\end{equation}

\textsc{Kriterium}\\
Sei $\v{A}$ regul\a r, $\v{A}$ besitzt eine LR-Zerlegung $\Leftrightarrow$ Alle Hauptuntermatrizen regul\a r.\vspace{0.2cm}

\textsc{Modellproblem: Bandmatrix}\\
Irgendwas bzgl Effizienz.\vspace{0.2cm}

\textsc{LR-Decomp}\\
Aufwand: \emph{kubisch} \\
$\downarrow$ Aufwand: Nur 1x f\u r jede Matrix betreiben. Sobald LR-Decomp vorliegt nur noch \emph{quadratischer} Aufwand \\ 
$\Downarrow$ Aufwand: Tridiagonalmatrix. Erster Schritt mit 3 AOPs. Restmatrix bleibt tridiagonal. Aufwand $3n$ + $6n$ f\u r R-und F-Einsetzen.\vspace{0.2cm}

\verb!lr_decomp!\\
{\addtolength{\leftskip}{0mm}
\hrulefill\\
for $k=1:n$\\
\quad for $i=k+1:n$ \\ 
\qquad $a_{ik} \leftarrow a_{ik}/a_{kk}$ \\
\qquad for $j=k+1:n$\\
\qquad\quad $a_{ij} \leftarrow a_{ij}-a_{ik}a_{kj}$\\
\hrulefill\\
}\vspace{0.2cm}

\textsc{Problem der Existenz einer LR-Z}\\
Falls $\v{A}$ oder $\v{A}_{**}$ eine 0 auf der Diagonalen hat, existiert keine LR-Zerlegung. L\o sung: Permutiere die Zeilen von $\v{A}$ so, dass das Ergebnis eine LR-Z besitzt.\vspace{0.2cm}

\textsc{Permutationsmatrix}\\
Sei $\v{P} \in \Rr{n}{n}$. Falls in jeder Zeile und Spalte von $\v{P}$ genau ein Eintrag 1 und alle anderen 0, dann ist $\v{P}$ eine Permutationsmatrix. $\v{P}$ ist orthogonal. Ein Produkt zweier Permutationsmatrizen $\v{P}\v{Q}$ ist auch eine Permutationsmatrix.\vspace{0.2cm}

\textsc{Permutation}\\
Bijektive Abbildung $\pi : \{1,\cdots,n\} \rightarrow \{1,\cdots,n\}$.\vspace{0.2cm}

\textsc{LR-Z mit Pivotsuche}\\
$\v{A}$ regul\a r. Es existiert $\v{P} \in \Rr{n}{n}$ sodass $\v{P}\v{A}=\v{L}\v{R}$ gilt. \\
Pivotisierung: Finde betragsmaximalstes Element in der aktuellen Spalte, welches unter dem aktuellen Diagonalelement von $\v{A}$ liegt und tausche die aktuelle Zeile mit der Zeile in der das betragsmaximalste Element ist, mit Hilfe von $\v{P}$. $a_{11} \neq 0$, da betragsgr\o \ss tes Element.\vspace{0.2cm}

\textsc{L\o sen eines Gleichungssystems mit Pivotsuche}\\
$\v{A}\v{x} = \v{b} \Leftrightarrow \v{P}\v{A}\v{x} = \v{P}\v{b} \Leftrightarrow \v{L}\v{R}\v{x}=\v{P}\v{b}$.\\
1.) $\v{Ly}=\tilde{\v{b}}$ \quad 2.) $\v{Rx} = \v{y}$

\verb!lr_pivot!\\
{\addtolength{\leftskip}{0mm}
\hrulefill\\
for $k=1:n$\\
\quad $i_* \leftarrow k$ \qquad\qquad // Finde max. Element \\ 
\quad for $i=k+1:n$ \\ 
\qquad if $|a_{ik}| > |a_{i_*k}|$: $i_* \leftarrow i$ \\
\quad $p_k \leftarrow i_*$ \\
\quad for $j=1:n$ \qquad // Tausche Zeilen \\ 
\qquad $\gamma \leftarrow a_{kj}$, $a_{kj} \leftarrow a_{i_*j}$, $a_{i_*j} \leftarrow \gamma$\\
\quad for $i=k+1:n$ \\ 
\qquad $a_{ik} \leftarrow a_{ik}/a_{kk}$ \\
\qquad for $j=k+1:n$\\
\qquad\quad $a_{ij} \leftarrow a_{ij}-a_{ik}a_{kj}$\\
\hrulefill\\
}
$\v{p}$ protokolliert, welche Vertauschungen durchgef\u hrt wurden, um sie sp\a ter auf $\v{b}$ anwenden zu k\o nnen.\\
Aufwand: $\frac{2}{3}n^3$.\vspace{0.2cm}

\textsc{Sonderfall: $\v{A}$ positiv definit}\\
TODO.


\subsection{Fehlerverst\a rkung}
\textsc{Norm des Matrix-Vektor-Produkts}\\
\emph{Wie stark \a ndert sich die L\a nge eines Vektors wenn er mit $\v{A}$ multipliziert wird. Mapping von Einheitskreis auf Ellipse.}.
F\u r $\v{A} \in \Rr{n}{n}$ gilt:
\begin{align*}
\alpha_2(\v{A}) &= \min\{\Vert \v{Ay} \Vert_2 : \v{y}\in\R{n}, \Vert \v{y} \Vert_2 =1 \} \\
\beta_2(\v{A}) &= \max\{\Vert \v{Ay} \Vert_2 : \v{y}\in\R{n}, \Vert \v{y} \Vert_2 =1 \} 
\end{align*}
und
\begin{align*}
\alpha_2(\v{A})\Vert \v{z} \Vert_2 \leq \Vert \v{Az} \Vert_2 \leq \beta_2(\v{A})\Vert \v{z} \Vert_2
\end{align*}
Eigenschaften der Norm:
\begin{align*}
\Vert \v{x} \Vert &= 0 \Leftrightarrow \v{x} = 0 \\
\Vert \lambda \v{x} \Vert &= | \lambda | \Vert \v{x} \Vert \\
\Vert \v{x} + \v{y} \Vert &\leq \Vert \v{x} \Vert+\Vert \v{y} \Vert
\end{align*}
TODO

\subsection{QR-Zerlegung}
\emph{F\u r jede Matrix gibt es eine QR-Z}.\\

\textsc{LR-Z: Schlecht konditioniertes Problem}\\
$\kappa_2(\v{A}) \gg 1$, $\kappa_2(\v{A}) \leq \kappa_2(\v{L})\kappa_2(\v{R})$\\
Kritisch falls $\kappa_2(\v{L})\kappa_2(\v{R}) \gg \kappa_2(\v{A})$.\\

Ziel: Suche Transformationen $\v{Q} \in \Rr{n}{n}$, die die Norm unver\a ndert lassen:
\begin{align*}
\Vert \v{Qy} \Vert_2 = \Vert y \Vert_2
\end{align*}
Mit Hinzunahme des Skalarprodukts:
\begin{align*}
\langle \v{y}, \v{y} \rangle_2 = \Vert \v{y} \Vert_2^2 = \Vert \v{Qy} \Vert_2^2 = \langle \v{Qy}, \v{Qy} \rangle_2 = \langle \v{y}, \v{Q}^*\v{Qy} \rangle_2
\end{align*}
muss $\v{Q}^*\v{Q} = \v{I}$ gelten.

Gesucht: $\v{A}=\v{QR}$.\\
Konditionszahl bzw. Fehlerverst\a rkung wird nicht verschlechtert: $\alpha_2(\v{A}) = \alpha_2(\v{R})$, $\beta_2(\v{A}) = \beta_2(\v{R})$\\
$\kappa_2(\v{A})= \kappa_2(\v{R})$.\\

\textsc{Givens-Rotation}\\
Mit Hilfe von Givens-Rotationen k\o nnen wir beliebige $\v{A}\in \Rr{m}{n}$ auf obere $\Delta$gestalt bringen.
\begin{align*}
\v{Q}=\begin{pmatrix}
c & s \\
-s & c
\end{pmatrix}
\text{ und }
\v{Qy} = \begin{pmatrix}
cy_1 + sy_2 \\ 0
\end{pmatrix}
\end{align*}
Konsekutiv Givens-Rotationen $\v{Q}_{ij}$ $i$-te und $j$-te Zeile anwenden um Eintrag $a_{ij}$ zu beseitigen. Bsp. $\v{A} \in \Rr{4}{3}$:
\begin{align*}
\v{R} = \v{Q}_{43}\v{Q}_{32}\v{Q}_{42}\v{Q}_{21}\v{Q}_{31}\v{Q}_{41}\v{A} \\
\underbrace{\v{Q}_{41}^*\v{Q}_{31}^*\v{Q}_{21}^*\v{Q}_{42}^*\v{Q}_{32}^*\v{Q}_{43}^*}_{\v{Q}}\v{R}=\v{A}
\end{align*}

\textsc{Kompakte Darstellung}\\
\emph{Verwende Nulleintr\a ge von $\v{A}$ bzw. $\v{R}$ um $\v{Q}_{ij}$ zu beschreiben}.\\
Finde Givens-Rotation:
\begin{align*}
\rho = 
\begin{cases}
s = \rho, c=\sqrt{1-s^2}  &\text{falls $|\rho|<1$} \\
c = 1/\rho, s=\sqrt{1-c^2} &\text{falls $|\rho|>1$} \\
c = 1, s=0 &\text{falls $\rho=1$}
\end{cases}
\end{align*}

Speichern der QR-Z in $\v{A}$:
\begin{equation}
\begin{pmatrix}
r_{11} & r_{12} & \cdots    & r_{1n} \\
\rho_{21} & r_{22} & \ddots    & \vdots \\
\vdots & \ddots & \ddots    & r_{n-1,n} \\
\rho_{n1} & \cdots & \rho_{n,n-1} & r_{nn} 
\end{pmatrix}
\end{equation}

\verb!Qr Decomp von! $\v{A} \in \Rr{m}{n}$\\
{\addtolength{\leftskip}{0mm}
\hrulefill\\
for $k=1:\min(m,n)$ \qquad {\scriptsize // Loop \u ber Diagonale}\\
\quad for $i=k+1:m$ \qquad {\scriptsize // Loop \u ber Elemente unter Diagonalen}\\
\qquad if $a_{ik}=0$\\
\qquad\quad $\rho \leftarrow 1$, $c \leftarrow 1$, $s \leftarrow 0$ \\
\qquad else if $|a_{kk}|\geq|a_{ik}|$ \qquad {\scriptsize // Vgl. mit Diag.element}\\
\qquad\quad $\tau \leftarrow a_{ik}/a_{kk}$, $\rho \leftarrow \tau/\sqrt{\tau^2+1}$, $s \leftarrow \rho$, $c\leftarrow \sqrt{1-s^2}$ \\
\qquad else \qquad\qquad\qquad\quad\qquad {\scriptsize // Vgl. mit Diag.element} \\
\qquad\quad $\tau \leftarrow a_{kk}/a_{ik}$, $\rho \leftarrow \sqrt{\tau^2+1}/\tau$, $c \leftarrow 1/\rho$, $s\leftarrow \sqrt{1-c^2}$ \\
\qquad {\scriptsize // Diag.element aktual., Giv.-Rot. in aktueller It. speichern}\\ 
\qquad $a_{kk} \leftarrow ca_{kk}+sa_{ik}$, $a_{ik}\leftarrow \rho$\\
\qquad for $j=k+1:n$ {\scriptsize // Loop \u ber Elemente in der $k$-ten Zeile}\\
\qquad \quad {\scriptsize // Giv-Rot auf Zeile anwenden} \\
\qquad \quad $\alpha \leftarrow a_{kj}$, $a_{kj} \leftarrow c\alpha+sa_{ij}$, $a_{ij} \leftarrow -s\alpha + ca_{ij}$ \\
\hrulefill\\
}
Aufwand: $6n^2+2n^3$ (quadratische Matrix) ~3x mehr als LR-Z. \vspace{0.2cm}

\textsc{L\o sen Gleichungssystem $\v{Ax}=\v{b}$}\\
$\v{b}=\v{Ax}=\v{QRx}=\v{Qy}$ \quad $\Leftrightarrow$ \quad 1.) $\v{y}=\v{Q}^*\v{b}$ \quad 2.) $\v{y}=\v{Rx}$.

1.) Qr\_transform: \U ber einzelne $G_{ij}$ (oben links angefangen) iterieren und auf $b$ multiplizieren. \\
2.) R\u ckw\a rtseinsetzen.\vspace{0.2cm}

\textsc{Effizientere QR-Z}\\
Householder-Spiegelungen: Aufwand ~2x mehr als LR-Z.\\
Mit Optimierungen bei Speicherzugriffen bei QR-Z \a hnlich schnell wie LR-Z.\vspace{0.2cm}

\subsection{Ausgleichsprobleme}
\emph{Wir suchen $\v{x}$ so, dass alle Gleichungen m\o glichst gleich gut erf\u llt werden}.

\section{Nichtlineare Gleichungssysteme}
\emph{Wir untersuchen nichtlineare Gleichungssysteme der Form}
\begin{align*}
&\text{Gegeben eine stetige Funktion $f:\R{n} \rightarrow \R{n}$, finde $\v{x}^* \in \R{n}$ mit} \\
&f(\v{x}^*) = \v{0}
\end{align*}
\emph{Transformieren in ein Nullstellenproblem}.
\subsection{Bisektionsverfahren}
\emph{Einfache Technik, das in jedem Schritt den Fehler mindestens halbiert. Basierend auf dem Zwischenwertsatz f\u r stetige Funktionen.}\vspace{0.2cm}

\textsc{Zwischenwertsatz}\\
Eine reele Funktion $f$, die in $[a,b]$ stetig ist, nimmt jeden Wert zwischen $f(a)$ und $f(b)$ an. Haben $f(a)$ und $f(b)$ verschiedene Vorzeichen, so ist eine Existenz mindestens einer Nullstelle in $[a,b]$ garantiert.\vspace{0.2cm}

\textsc{Verfahren in mathematischer Notation}\\
\begin{align*}
(a^{(0)}, b^{(0)}) &= (a,b)\\
x^{(m)} &= \frac{a^{(m)} + b^{(m)}}{2} \\
(a^{(m+1)}, b^{(m+1)}) &= \begin{cases}
(a^{(m)}, x^{(m)}) & \text{ if } f(a^{(m)})f(x^{(m)}) < 0 \\
(x^{(m)}, b^{(m)}) & \text{ sonst.}
\end{cases}
\end{align*}


\verb!Bisection!\\
{\addtolength{\leftskip}{0mm}
\hrulefill\\
$f_a \leftarrow f(a)$, $f_b \leftarrow f(b)$\\
\verb!while! $b-a>\epsilon$\\
\quad $x \leftarrow (a+b)/2$ \\
\quad $f_x \leftarrow f(x)$ \\
\quad \verb!if! $f_af_x < 0$ \\ 
\qquad $b \leftarrow x$, $f_b \leftarrow f_x$ \\
\quad \verb!else! \\
\qquad $a \leftarrow x$, $f_a \leftarrow f_x$ \\
\hrulefill\\
}

\subsection{Allgemeine Fixpunktiterationen}
\subsection{Newton-Verfahren}

\section{Eigenwertprobleme}
\subsection{Vektoriteration}
\subsection{Inverse Iteration}
\subsection{Orthogonale Iteration}
\subsection{QR-Iteration}
\subsection{Praktische QR-Iteration}

\section{Approximation von Funktionen}
\subsection{Polynominterpolation}
\subsection{Neville-Aitken-Verfahren}
\subsection{Newtons dividierte Differenzen}
\subsection{Approximation von Funktionen}

\section{Numerische Integration}
\subsection{Quadraturformeln}
\subsection{Fehleranalyse}
\clearpage